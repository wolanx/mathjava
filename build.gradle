plugins {
    id "java-library"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
//apply from: './jar.gradle'

group = 'com.zx5435'
version = '1.0'
sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'mathjava'
                description = 'mathjs java edition'
                url = 'https://github.com/zx5435/mathjava'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Yujie.Zhao'
                        email = '825407762@qq.com'
                    }
                }
                scm {
                    url = 'https://github.com/zx5435/mathjava'
                    connection = 'scm:git:git://github.com/zx5435/mathjava.git'
                    developerConnection = 'scm:git:ssh://git@github.com:zx5435/mathjava.git'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    // gpg --generate-key
    // gpg --export-secret-keys -o secring.gpg    # config link it
    // gpg --export -a    # send public to https://keyserver.ubuntu.com
}

nexusPublishing {
    // https://github.com/gradle-nexus/publish-plugin/
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))

            username = "zx5435"
            // password = ~/.gradle/gradle.properties sonatypePassword=
        }
    }
}
